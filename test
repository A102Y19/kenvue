# ==============================
# BACKUP D:\OMP Dump FOLDER BEFORE START (SAFE COPY)
# ==============================
def backup_OMP_DUMP(source_dir, backup_root_dir):
    try:
        logging.info(f"Starting backup of {source_dir}...")
        os.makedirs(backup_root_dir, exist_ok=True)
		
        folder_name = os.path.basename(os.path.normpath(source_dir))
		
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')

        backup_folder_name = f"{folder_name}_{timestamp}"
		
        backup_folder = os.path.join(backup_root_dir, backup_folder_name)
        os.makedirs(backup_folder, exist_ok=True)

        # Walk through all files and folders
        for root, dirs, files in os.walk(source_dir):
            rel_path = os.path.relpath(root, source_dir)
            target_root = os.path.join(backup_folder, rel_path)
            os.makedirs(target_root, exist_ok=True)

            for file in files:
                src_file = os.path.join(root, file)
                dest_file = os.path.join(target_root, file)
                try:
                    shutil.copy2(src_file, dest_file)
                except Exception as e:
                    logging.warning(f"Skipped file '{src_file}' due to error: {e}")

        logging.info(f"Backup completed successfully: {backup_folder}")
        print(f"Backup created: {backup_folder}")

    except Exception as e:
        logging.error(f"Failed to backup folder: {e}")
        print(f"Failed to backup folder: {e}")
        sys.exit(1)


source_dir = r"D:\OMP Dump"
backup_root_dir = r"D:\OMP Dump\Backup"

# Check source folder exists before calling backup
if os.path.exists(source_dir):
    backup_OMP_DUMP(source_dir, backup_root_dir)
else:
    logging.error(f"Source folder not found: {source_dir}. Exiting script.")
    print(f"Source folder not found: {source_dir}. Exiting script.")
    sys.exit(1)
