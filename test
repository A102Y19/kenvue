# Path to server list file
$ServerList = "\\awsusdmjfsxn01.jnj.com\eth_qa2_omp\Task_Scheduler\Server_list.txt"

# ===============================
# Bulk Disable Scheduled Task
# ===============================

# Task details
$TaskName = "Agent_Monitoring"
$TaskPath = "\Agent\"   # very important (from your screenshot)

# Output log file (CSV report)
$ReportFile = "\\awsusdmjfsxn01.jnj.com\eth_qa2_omp\Task_Scheduler\DisableTaskReport.csv"

# Empty array for results
$Results = @()

# Loop through each server
foreach ($server in Get-Content $ServerList) {
    Write-Host "Processing server: $server ..." -ForegroundColor Cyan
    try {
        $result = Invoke-Command -ComputerName $server -ScriptBlock {
            param($TaskName, $TaskPath)

            $task = Get-ScheduledTask -TaskName $TaskName -TaskPath $TaskPath -ErrorAction SilentlyContinue
            if ($null -ne $task) {
                Disable-ScheduledTask -TaskName $TaskName -TaskPath $TaskPath -ErrorAction Stop
                return "Disabled"
            } else {
                return "Not Found"
            }
        } -ArgumentList $TaskName, $TaskPath -ErrorAction Stop

        # Save result
        $Results += [PSCustomObject]@{
            Server   = $server
            TaskName = $TaskName
            Status   = $result
        }

        if ($result -eq "Disabled") {
            Write-Host "[$server] - Task '$TaskName' disabled successfully." -ForegroundColor Green
        } elseif ($result -eq "Not Found") {
            Write-Host "[$server] - Task '$TaskName' not found." -ForegroundColor Yellow
        }
    }
    catch {
        Write-Host "[$server] - Failed to disable task '$TaskName'. Error: $_" -ForegroundColor Red
        $Results += [PSCustomObject]@{
            Server   = $server
            TaskName = $TaskName
            Status   = "Error: $_"
        }
    }
}

# Export final report
$Results | Export-Csv -Path $ReportFile -NoTypeInformation -Force

Write-Host "All done! Report saved to $ReportFile" -ForegroundColor Cyan
