import subprocess
import socket
import time
import os
import logging
from datetime import datetime

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[logging.StreamHandler()]
)

username = r"JX2\SA-JX2-APSCOIT-MDPQA"
password = os.getenv("Agent_key")  # Set this in your environment before running

local_machine = socket.gethostname().upper()

tasks = [
    ("VMCITSEUW006X", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA"),
    ("VMCITSEUW006X", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA_DSPAgent"),
    ("VMCITSEUW006Y", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA_DSPAgent"),
    ("VMCITSEUW006Z", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA_DSPAgent"),
    ("VMCITSEUW0070", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA_DSPAgent"),
    ("VMCITSEUW0071", r"OMP Dispatcher\OMP_KNV_CO_MADRID_PQA_DSPAgent"),
]

for machine, task in tasks:
    logging.info(f"Running task on {machine}: {task}")

    if machine.upper() == local_machine:
        result = subprocess.run(
            ["schtasks.exe", "/run", "/TN", task],
            capture_output=True, text=True
        )
    else:
        result = subprocess.run(
            ["schtasks.exe", "/run", "/S", machine, "/U", username, "/P", password, "/TN", task],
            capture_output=True, text=True
        )

    if result.returncode != 0:
        logging.error(f"Failed on {machine}: {result.stderr.strip()}")
    else:
        logging.info(f"Success on {machine}")

    if "OMP_KNV_CO_MADRID_PQA" in task and "DSPAgent" not in task:
        logging.info("Waiting 15 seconds before starting agents...")
        time.sleep(15)
